// efeito opacity da esquerda para direita
const observer = new IntersectionObserver(entries => {
    Array.from(entries).forEach(entry => {
        if (entry.intersectionRatio >= 0.1) {
            entry.target.classList.add('slide-from-left');
        }
    });
}, {
    threshold: [0.1]
});

Array.from(document.querySelectorAll('.init-hidden')).forEach(element => {
    observer.observe(element);
});
// efeito opacity da esquerda para direita

// efeito opacity apenas
const observer1 = new IntersectionObserver(entries => {

    Array.from(entries).forEach(entry => {
        if (entry.intersectionRatio >= 0.1) {
            entry.target.classList.add('init-hidden-off');
            entry.target.classList.remove('init-hidden');
        } else {
            entry.target.classList.remove('init-hidden-off');
        }
    });

}, {
    threshold: [0.1]
});

Array.from(document.querySelectorAll('.init-hidden')).forEach(element => {
    observer.observe(element);
});
// efeito opacity apenas


